definitions:
  example.TErrorCode:
    enum:
    - 0
    - -1
    - -2
    - -3
    type: integer
    x-enum-varnames:
    - TErrorCode_EGood
    - TErrorCode_ENotFound
    - TErrorCode_EUnknown
    - TErrorCode_EDataExisted
  example.User:
    properties:
      age:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/users:
    get:
      description: Get a list of all users
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/example.User'
            type: array
      summary: Get all users
    post:
      description: Create a new user with the provided data
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/example.User'
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/example.User'
            type: array
        "400":
          description: Invalid request body
          schema:
            items:
              $ref: '#/definitions/example.TErrorCode'
            type: array
      summary: Create a new user
  /api/users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "404":
          description: User not found
          schema:
            items:
              $ref: '#/definitions/example.TErrorCode'
            type: array
      summary: Delete a user
    put:
      description: Update an existing user with the provided data
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/example.User'
      responses:
        "200":
          description: Successfully updated user
          schema:
            items:
              $ref: '#/definitions/example.User'
            type: array
        "400":
          description: Invalid request body
          schema:
            items:
              $ref: '#/definitions/example.TErrorCode'
            type: array
        "404":
          description: User not found
          schema:
            items:
              $ref: '#/definitions/example.TErrorCode'
            type: array
      summary: Update an existing user
swagger: "2.0"
